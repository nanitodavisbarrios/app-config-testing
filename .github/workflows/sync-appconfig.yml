name: Sync Azure App Configuration (no OIDC) - BU repo

on:
  workflow_dispatch:
    inputs:
      targetEnv:
        description: "Environment (dev/test/prod)"
        required: true
        default: "dev"

permissions:
  contents: read

jobs:
  sync:
    runs-on: ubuntu-latest
    environment: ${{ inputs.targetEnv }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build JSON and push keys (Feature:AutoUpdate, Feature:DataExplorer)
        uses: azure/cli@v2
        with:
          inlineScript: |
            set -euo pipefail

            # ---- Inputs from GitHub Environment ----
            CS='${{ secrets.APPCONFIG_CONNECTION_STRING }}'
            LABEL_RAW='${{ vars.TARGET_LABEL }}'

            # Normalize label arg: allow sentinel for No label
            if [ "$LABEL_RAW" = "_NO_LABEL_" ] || [ -z "${LABEL_RAW:-}" ]; then
              LABEL=""
            else
              LABEL="$LABEL_RAW"
            fi

            # ---------- Feature:AutoUpdate ----------
            AUTO_SCRIPT='VEStudio.schedule'
            AUTO_REPORT='laststatuses.txt'
            AUTO_SAVE='false'   # "true"/"false" string (keep as-is)
            AUTO_EMAIL='false'        # "true"/"false" string (keep as-is)

            # ---------- Feature:DataExplorer ----------
            DEX_READ_ROLE='DDT_DataExplorer'
            DEX_MODIFY_ROLE='DDT_DataExplorer_Modify'
            STORAGE_ACCOUNT='${{ vars.STORAGE_ACCOUNT }}'
            SHARE_USERCONTENT='usercontent'

            if [ -z "$CS" ]; then
              echo "ERROR: APPCONFIG_CONNECTION_STRING is not set for this environment."
              exit 1
            fi

            # Tools
            az extension add --name appconfig --only-show-errors || true
            sudo apt-get update -y >/dev/null 2>&1 || true
            sudo apt-get install -y jq >/dev/null 2>&1

            # Prepare label flag
            labelFlag=()
            if [ -n "$LABEL" ]; then
              labelFlag+=(--label "$LABEL")
              echo "Using label: $LABEL"
            else
              echo "Using NO label"
            fi

            # ---------- Build JSON values with jq (no escaping headaches) ----------
            # Feature:AutoUpdate
            AUTO_JSON=$(jq -c -n \
              --arg script "$AUTO_SCRIPT" \
              --arg report "$AUTO_REPORT" \
              --arg save "$AUTO_SAVE" \
              --arg email "$AUTO_EMAIL" \
              '{ ScriptFileName:$script,
                 ReportFileName:$report,
                 SaveFullReport:$save,
                 SendReportByEmail:$email }')

            # Build UNC base with double backslashes for JSON
            # Result (example): \\storageaccount.file.core.windows.net\usercontent
            UNC_BASE="\\\\\\${STORAGE_ACCOUNT}.file.core.windows.net\\${SHARE_USERCONTENT}"

            # Feature:DataExplorer
            DEX_JSON=$(jq -c -n \
              --arg readRole   "$DEX_READ_ROLE" \
              --arg modifyRole "$DEX_MODIFY_ROLE" \
              --arg queries    "${UNC_BASE}\\Queries" \
              --arg highlights "${UNC_BASE}\\Highlights" \
              '{ ReadRole:$readRole,
                 RequiredRoleToModify:$modifyRole,
                 QueriesFolder:$queries,
                 HighlightsFolder:$highlights }')

            # ---------- Upsert JSON keys ----------
            az appconfig kv set --connection-string "$CS" \
              --key "Feature:AutoUpdate" \
              "${labelFlag[@]}" \
              --value "$AUTO_JSON" \
              --content-type "application/json" \
              --yes
