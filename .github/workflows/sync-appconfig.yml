name: Sync Azure App Configuration (templates + vars)

on:
  workflow_dispatch:
    inputs:
      targetEnv:
        description: "Environment (dev/test/prod)"
        required: true
        default: "dev"

permissions:
  contents: read

jobs:
  sync:
    runs-on: ubuntu-latest
    environment: ${{ inputs.targetEnv }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Render & push features
        uses: azure/cli@v2
        env:
          APPCONFIG_CONNECTION_STRING: ${{ secrets.APPCONFIG_CONNECTION_STRING }}
          TARGET_LABEL: ${{ vars.TARGET_LABEL }}
          FUNCLOC_CLIENT_SECRET_URI: ${{ secrets.FUNCLOC_CLIENT_SECRET_URI }}
          FUNCLOC_OCPAPIM_SUBSCRIPTION_KEY_URI: ${{ secrets.FUNCLOC_OCPAPIM_SUBSCRIPTION_KEY_URI }}
        with:
          inlineScript: |
            set -eo pipefail
            az config set extension.use_dynamic_install=yes_without_prompt

            echo "PWD: $PWD"
            echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
            echo "Repo tree (top level):"
            ls -la "$GITHUB_WORKSPACE"
            echo "config/:"
            ls -la "$GITHUB_WORKSPACE/config" || true
            echo "scripts/:"
            ls -la "$GITHUB_WORKSPACE/scripts" || true

            CS="${APPCONFIG_CONNECTION_STRING:?Missing APPCONFIG_CONNECTION_STRING}"
            FEATURES_PATH="$GITHUB_WORKSPACE/config/features.json"
            VARS_PATH="$GITHUB_WORKSPACE/config/variables.${{ inputs.targetEnv }}.json"
            LABEL="${TARGET_LABEL:-}"

            echo "Using FEATURES_PATH=$FEATURES_PATH"
            echo "Using VARS_PATH=$VARS_PATH"
            
            echo "----- HEAD of features.json -----"
            sed -n '1,80p' "$FEATURES_PATH" || true
            echo "----- HEAD of variables.json -----"
            sed -n '1,80p' "$VARS_PATH" || true

            python3 "$GITHUB_WORKSPACE/scripts/sync_appconfig_from_json.py" \
              --connection-string "$CS" \
              --features "$FEATURES_PATH" \
              --vars "$VARS_PATH" \
              --label "$LABEL"

      - name: Summary (optional)
        if: always()
        uses: azure/cli@v2
        env:
          APPCONFIG_CONNECTION_STRING: ${{ secrets.APPCONFIG_CONNECTION_STRING }}
          TARGET_LABEL: ${{ vars.TARGET_LABEL }}
        with:
          inlineScript: |
            set -eo pipefail
            labelFlag=()
            if [ -n "${TARGET_LABEL:-}" ] && [ "${TARGET_LABEL}" != "_NO_LABEL_" ]; then
              labelFlag+=(--label "${TARGET_LABEL}")
            fi
            az appconfig kv list \
              --connection-string "${APPCONFIG_CONNECTION_STRING}" \
              "${labelFlag[@]}" \
              --key "Feature:*" \
              --query "[].{key:key,label:label,contentType:content_type,lastModified:last_modified}" \
              -o table
